{
  "name": "grunt-rigger",
  "description": "Rigging tasks for elegant includes",
  "version": "0.5.0",
  "homepage": "https://github.com/DamonOehlman/grunt-rigger",
  "author": {
    "name": "Damon Oehlman",
    "email": "damon.oehlman@sidelab.com"
  },
  "repository": {
    "type": "git",
    "url": "git://github.com/DamonOehlman/grunt-rigger.git"
  },
  "bugs": {
    "url": "https://github.com/DamonOehlman/grunt-rigger/issues"
  },
  "licenses": [
    {
      "type": "MIT",
      "url": "https://github.com/DamonOehlman/grunt-rigger/blob/master/LICENSE-MIT"
    }
  ],
  "main": "Gruntfile.js",
  "engines": {
    "node": ">= 0.8.0"
  },
  "scripts": {
    "test": "./node_modules/.bin/grunt test"
  },
  "dependencies": {
    "rigger": "0.5.x"
  },
  "devDependencies": {
    "grunt-cli": "0.1.x",
    "grunt-contrib-jshint": "~0.2.0",
    "grunt-contrib-nodeunit": "~0.1.2",
    "grunt-contrib-clean": "~0.4.0",
    "grunt": "~0.4.0",
    "coffee-script": "1.5.x"
  },
  "peerDependencies": {
    "grunt": "~0.4.0"
  },
  "keywords": [
    "gruntplugin"
  ],
  "contributors": [
    {
      "name": "Damon Oehlman",
      "email": "damon.oehlman@sidelab.com",
      "url": "https://github.com/DamonOehlman"
    },
    {
      "name": "Jan MÃ¼hlemann",
      "url": "https://github.com/jamuhl"
    }
  ],
  "readme": "# grunt-rigger\n\n<a href=\"http://travis-ci.org/#!/DamonOehlman/grunt-rigger\"><img src=\"https://secure.travis-ci.org/DamonOehlman/grunt-rigger.png\" alt=\"Build Status\"></a>\n\nThis is a [grunt](https://github.com/gruntjs/grunt) plugin for the [buildJS](https://github.com/buildjs) tool [rigger](https://github.com/buildjs/rigger). \n\nRigger provides targetted include functionality (similar to [sprockets](https://github.com/sstephenson/sprockets)) but with some additional functionality.  A highlight of rigger functionality is outlined below:\n\n- Simple include format for including files using a special comment syntax (`//= foo.js`)\n- Ability to include remote resources as well as local: (`http://github.com/buildjs/shims/string/trim.js`)\n- Ability to intelligently transpile from [coffee-script](https://coffeescript.org), [stylus](http://learnboost.github.com/stylus/), etc to their natural web equivalents (js, css, etc).\n\n## Usage\n\nTo use `grunt-rigger` you will need to include it in your `package.json` file (I'd recommend under the `devDependencies` section):\n\n```json\n{\n  \"name\": \"myproject\",\n  \"devDependencies\": {\n    \"coffee-script\": \"1.3.x\",\n    \"grunt-rigger\": \"0.4.x\"\n  },\n}\n```\n\nYou will see in the example above, `coffee-script` is also included in the `devDependencies` section.  In cases where you would like to leverage riggers ability to transpile files (e.g. `.coffee` => `.js`) you will need to include the appropriate node package in your `devDependencies` as these are not automatically included in rigger itself (to avoid library bloat).\n\nUsing `grunt-rigger` within grunt itself is very simple.  Consider the following sample `grunt.js` file:\n\n```js\nmodule.exports = function(grunt) {\n    grunt.initConfig({\n        rig: {\n            compile: {        \n                options: {\n                    banner: '/* THIS BANNER USES TEMPLATE FUNCTIONALITY <%= banner_property %> */\\n',\n                    footer: '\\n/* SOME FOOTER */'\n                },\n                files: {\n                    'dist/simple.js': ['src/simple.js']\n                }\n            }\n        }\n    });\n\n    grunt.loadNpmTasks('grunt-rigger');\n};\n```\n\nThat should be pretty much it, if your source file contains any [rigger](https://github.com/buildjs/rigger) comments they will be parsed and executed accordingly.",
  "readmeFilename": "README.md",
  "_id": "grunt-rigger@0.5.0",
  "dist": {
    "shasum": "3af345b37316e8cda574401a4aefd80633b8cf1c"
  },
  "_from": "grunt-rigger@*",
  "_resolved": "https://registry.npmjs.org/grunt-rigger/-/grunt-rigger-0.5.0.tgz"
}
